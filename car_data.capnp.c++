// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: car_data.capnp

#include "car_data.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<47> b_937ff0efa195013e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     62,   1, 149, 161, 239, 240, 127, 147,
     15,   0,   0,   0,   1,   0,   1,   0,
     57, 233,  53,   1,  98, 215,  64, 152,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 114,  95, 100,  97, 116,  97,
     46,  99,  97, 112, 110, 112,  58,  67,
     97, 114,  68,  97, 116,  97,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 112, 101, 101, 100,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,  97, 119,  82,  97, 116, 101,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_937ff0efa195013e = b_937ff0efa195013e.words;
#if !CAPNP_LITE
static const uint16_t m_937ff0efa195013e[] = {0, 1};
static const uint16_t i_937ff0efa195013e[] = {0, 1};
const ::capnp::_::RawSchema s_937ff0efa195013e = {
  0x937ff0efa195013e, b_937ff0efa195013e.words, 47, nullptr, m_937ff0efa195013e,
  0, 2, i_937ff0efa195013e, nullptr, nullptr, { &s_937ff0efa195013e, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// CarData
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CarData::_capnpPrivate::dataWordSize;
constexpr uint16_t CarData::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CarData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CarData::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



